package ${package.ServiceImpl};

import java.io.Serializable;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import ${package.Entity}.${entity};
import ${cfg.paramPackage}.${cfg.get(${table.name}).pageParamClassName};
import ${cfg.paramPackage}.${cfg.get(${table.name}).listParamClassName};
import ${cfg.voPackage}.${cfg.get(${table.name}).voClassName};
import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${superServiceImplClassPackage};
import org.springframework.stereotype.Service;
import org.tiankafei.web.common.vo.Paging;

/**
 * <p>
 * $!{table.comment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Service
#if(${kotlin})
open class ${table.serviceImplName} : ${superServiceImplClass}<${table.mapperName}, ${entity}>(), ${table.serviceName} {

}
#else
public class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName} {

    @Autowired
    private ${table.mapperName} ${cfg.get(${table.name}).mapperConstName};


    /**
     * 校验 $!{table.comment} 是否已经存在
     *
     * @param ${cfg.get(${table.name}).listParamConstName}
     * @return
     * @throws Exception
     */
	@Override
    public boolean check${table.serviceName}Exists(${cfg.get(${table.name}).listParamClassName} ${cfg.get(${table.name}).listParamConstName}) throws Exception {
		return false;
	}

    /**
     * 保存 $!{table.comment}
     *
     * @param ${cfg.get(${table.name}).voConstName}
     * @return
     * @throws Exception
     */
	@Override
    public Object save${table.serviceName}(${cfg.get(${table.name}).voClassName} ${cfg.get(${table.name}).voConstName}) throws Exception {
		return null;
	}

    /**
     * 保存 $!{table.comment} 集合
     *
     * @param ${cfg.get(${table.name}).voConstName}List
     * @return
     * @throws Exception
     */
	@Override
    public boolean save${table.serviceName}List(List<${cfg.get(${table.name}).voClassName}> ${cfg.get(${table.name}).voConstName}List) throws Exception {
		return false;
	}

    /**
     * 修改 $!{table.comment}
     *
     * @param ${cfg.get(${table.name}).voConstName}
     * @return
     * @throws Exception
     */
	@Override
    public boolean update${table.serviceName}(${cfg.get(${table.name}).voClassName} ${cfg.get(${table.name}).voConstName}) throws Exception {
		return false;
	}

    /**
     * 删除 $!{table.comment}
     *
     * @param ids
     * @return
     * @throws Exception
     */
	@Override
    public boolean delete${table.serviceName}(String ids) throws Exception {
		return false;
	}

    /**
     * 根据条件删除 $!{table.comment}
     *
     * @param ${cfg.get(${table.name}).listParamConstName}
     * @return
     * @throws Exception
     */
	@Override
    public boolean delete${table.serviceName}(${cfg.get(${table.name}).listParamClassName} ${cfg.get(${table.name}).listParamConstName}) throws Exception {
		return false;
	}

    /**
     * 根据ID获取 $!{table.comment} 对象
     *
     * @param id
     * @return
     * @throws Exception
     */
	@Override
    public ${cfg.get(${table.name}).voClassName} get${table.serviceName}ById(Serializable id) throws Exception {
		return null;
	}

    /**
     * 获取 $!{table.comment} 分页对象列表
     *
     * @param ${cfg.get(${table.name}).pageParamConstName}
     * @return
     * @throws Exception
     */
	@Override
    public Paging<${cfg.get(${table.name}).voClassName}> get${table.serviceName}PageList(${cfg.get(${table.name}).pageParamClassName} ${cfg.get(${table.name}).pageParamConstName}) throws Exception {
		return null;
	}

    /**
     * 获取 $!{table.comment} 对象列表
     *
     * @param ${cfg.get(${table.name}).listParamConstName}
     * @return
     * @throws Exception
     */
	@Override
    public List<${cfg.get(${table.name}).voClassName}> get${table.serviceName}List(${cfg.get(${table.name}).listParamClassName} ${cfg.get(${table.name}).listParamConstName}) throws Exception {
		return null;
	}

    /**
     * 计算 $!{table.comment} 总记录数
     *
     * @param ${cfg.get(${table.name}).listParamConstName}
     * @return
     * @throws Exception
     */
	@Override
    public int count${table.serviceName}(${cfg.get(${table.name}).listParamClassName} ${cfg.get(${table.name}).listParamConstName}) throws Exception {
		return 0;
	}
	

}
#end
