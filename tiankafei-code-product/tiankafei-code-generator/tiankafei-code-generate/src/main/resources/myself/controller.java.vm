package ${package.Controller};

import java.util.List;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
#if(${swagger2})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
import ${cfg.paramPackage}.${cfg.get(${table.name}).checkParamClassName};
import ${cfg.paramPackage}.${cfg.get(${table.name}).countParamClassName};
import ${cfg.paramPackage}.${cfg.get(${table.name}).deleteParamClassName};
import ${cfg.paramPackage}.${cfg.get(${table.name}).pageParamClassName};
import ${cfg.paramPackage}.${cfg.get(${table.name}).listParamClassName};
import ${package.Service}.${table.serviceName};
import ${cfg.voPackage}.${cfg.get(${table.name}).voClassName};
import ${cfg.apiResultClassPath};
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import ${cfg.idsParamClassPath};
import ${cfg.pageClassPath};

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${swagger2})
@Api(value = "$!{table.comment} API", tags = {"$!{table.comment}"})
#end
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private ${table.serviceName} ${cfg.get(${table.name}).serviceConstName};

	@PostMapping("/check")
#if(${swagger2})
	@ApiOperation(value = "校验 $!{table.comment} 对象是否存在")
#end	
	public ApiResult<Boolean> check${table.controllerName}Exists(@Valid @RequestBody ${cfg.get(${table.name}).checkParamClassName} ${cfg.get(${table.name}).checkParamConstName}) throws Exception {
		Boolean flag = ${cfg.get(${table.name}).serviceConstName}.check${table.serviceName}Exists(${cfg.get(${table.name}).checkParamConstName});
		return ApiResult.ok(flag);
	}

	@PostMapping
#if(${swagger2})
	@ApiOperation(value = "添加 $!{table.comment}")
#end	
	public ApiResult<Object> add${table.controllerName}(@Valid @RequestBody ${cfg.get(${table.name}).voClassName} ${cfg.get(${table.name}).voConstName}) throws Exception {
		Object id = ${cfg.get(${table.name}).serviceConstName}.add${table.serviceName}(${cfg.get(${table.name}).voConstName});
		return ApiResult.ok(id);
	}
	
	@PostMapping("/batch")
#if(${swagger2})
	@ApiOperation(value = "批量添加 $!{table.comment}")
#end	
	public ApiResult<List<Object>> batchAdd${table.controllerName}(@Valid @RequestBody List<${cfg.get(${table.name}).voClassName}> ${cfg.get(${table.name}).voConstName}List) throws Exception {
		List<Object> idList = ${cfg.get(${table.name}).serviceConstName}.batchAdd${table.serviceName}(${cfg.get(${table.name}).voConstName}List);
		return ApiResult.ok(idList);
	}
	
	@DeleteMapping("/{id}")
#if(${swagger2})
	@ApiOperation(value = "删除 $!{table.comment}")
#end	
	public ApiResult<Boolean> delete${table.controllerName}(@PathVariable(value = "id") String id) throws Exception {
		boolean flag = ${cfg.get(${table.name}).serviceConstName}.delete${table.serviceName}(id);
		return ApiResult.ok(flag);
	}
	
	@DeleteMapping("/batch")
#if(${swagger2})
	@ApiOperation(value = "批量删除 $!{table.comment}")
#end	
	public ApiResult<Boolean> batchDelete${table.controllerName}(@Valid @RequestBody IdsParam idsParam) throws Exception {
		boolean flag = ${cfg.get(${table.name}).serviceConstName}.batchDelete${table.serviceName}(idsParam.getIds());
		return ApiResult.ok(flag);
	}
		
	@DeleteMapping("/condition")
#if(${swagger2})
	@ApiOperation(value = "条件删除 $!{table.comment}")
#end	
	public ApiResult<Boolean> conditionDelete${table.controllerName}(@Valid @RequestBody ${cfg.get(${table.name}).deleteParamClassName} ${cfg.get(${table.name}).deleteParamConstName}) throws Exception {
		boolean flag = ${cfg.get(${table.name}).serviceConstName}.conditionDelete${table.serviceName}(${cfg.get(${table.name}).deleteParamConstName});
		return ApiResult.ok(flag);
	}
	
	@PatchMapping
#if(${swagger2})
	@ApiOperation(value = "更新 $!{table.comment}")
#end	
	public ApiResult<Boolean> update${table.controllerName}(@Valid @RequestBody ${cfg.get(${table.name}).voClassName} ${cfg.get(${table.name}).voConstName}) throws Exception {
		boolean flag = ${cfg.get(${table.name}).serviceConstName}.update${table.serviceName}(${cfg.get(${table.name}).voConstName});
		return ApiResult.ok(flag);
	}

	@GetMapping("/{id}")
#if(${swagger2})
	@ApiOperation(value = "获取 $!{table.comment} 对象")
#end	
	public ApiResult<${cfg.get(${table.name}).voClassName}> get${table.controllerName}(@PathVariable(value = "id") String id) throws Exception {
		${cfg.get(${table.name}).voClassName} ${cfg.get(${table.name}).voConstName} = ${cfg.get(${table.name}).serviceConstName}.get${table.serviceName}ById(id);
		return ApiResult.ok(${cfg.get(${table.name}).voConstName});
	}
	
	@GetMapping
#if(${swagger2})
	@ApiOperation(value = "获取 $!{table.comment} 对象全集")
#end	
	public ApiResult<List<${cfg.get(${table.name}).voClassName}>> get${table.controllerName}AllList() throws Exception {
		List<${cfg.get(${table.name}).voClassName}> ${cfg.get(${table.name}).voConstName}List = ${cfg.get(${table.name}).serviceConstName}.get${table.serviceName}List(null);
		return ApiResult.ok(${cfg.get(${table.name}).voConstName}List);
	}

	@PostMapping("/list")
#if(${swagger2})
	@ApiOperation(value = "获取 $!{table.comment} 对象列表")
#end	
	public ApiResult<List<${cfg.get(${table.name}).voClassName}>> get${table.controllerName}List(@Valid @RequestBody ${cfg.get(${table.name}).listParamClassName} ${cfg.get(${table.name}).listParamConstName}) throws Exception {
		List<${cfg.get(${table.name}).voClassName}> ${cfg.get(${table.name}).voConstName}List = ${cfg.get(${table.name}).serviceConstName}.get${table.serviceName}List(${cfg.get(${table.name}).listParamConstName});
		return ApiResult.ok(${cfg.get(${table.name}).voConstName}List);
	}
	
	@PostMapping("/pageList")
#if(${swagger2})
	@ApiOperation(value = "获取 $!{table.comment} 分页对象列表")
#end	
	public ApiResult<Paging<${cfg.get(${table.name}).voClassName}>> get${table.controllerName}PageList(@Valid @RequestBody ${cfg.get(${table.name}).pageParamClassName} ${cfg.get(${table.name}).pageParamConstName}) throws Exception {
		Paging<${cfg.get(${table.name}).voClassName}> ${cfg.get(${table.name}).voConstName}List = ${cfg.get(${table.name}).serviceConstName}.get${table.serviceName}PageList(${cfg.get(${table.name}).pageParamConstName});
		return ApiResult.ok(${cfg.get(${table.name}).voConstName}List);
	}

	@PostMapping("/count")
#if(${swagger2})
	@ApiOperation(value = "求 $!{table.comment} 对象的记录数")
#end	
	public ApiResult<Long> count${table.controllerName}(@Valid @RequestBody ${cfg.get(${table.name}).countParamClassName} ${cfg.get(${table.name}).countParamConstName}) throws Exception {
		Long count = ${cfg.get(${table.name}).serviceConstName}.count${table.serviceName}(${cfg.get(${table.name}).countParamConstName});
		return ApiResult.ok(count);
	}


}

#end