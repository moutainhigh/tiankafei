package org.tiankafei.cache.controller;

/**
 * 缓存预热问题思考：
 * 前置条件：
 *      1.缓存是以jar包的方式对外提供支持
 *      2.可能给若干个需要缓存服务的工程提供支持
 *      3.缓存预热适合在秒杀、大促之前，先把数据缓存起来，减少瞬时的大量请求到达数据的情况
 *      4.其他适用于缓存预热的问题
 * 场景：
 *      1.缓存数据是存放在第三方平台自己的系统里，当给多个服务提供支持时，该jar包是从第三方平台自己的系统中取数数据并进行返回的。
 *          这种情况的缓存预热，只需要想办法把需要的数据缓存到第三方缓存框架的系统中即可
 *      2.缓存数据是存放在服务自身的JVM内存当中的，当给多个服务提供支持，每一个服务中的JVM中，都需要存储一份缓存的数据.
 *          这种情况的缓存预热，需要依次调用依赖该工程的服务，把需要的数据缓存到JVM的内存中，只要少了一个，那么少了的这一个就会造成穿透或者击穿的问题
 * 实现方案：
 *      1.缓存预热的实现，当一个缓存工具对业务提供支持时，可能并不是该缓存工具中的所有缓存都有那么大的并发处理，所以可以针对不同的业务缓存不同的数据，从而也可见减少内存的使用
 *      2.缓存的预热应该由业务本身来进行实现
 * 具体实现：
 *      1.写个缓存刷新页面，上线时手工操作下
 *      2.数据量不大，可以在项目启动的时候自动进行加载
 *      3.定时刷新缓存
 *
 * @author tiankafei
 */
public interface CacheWarmupController {

    /**
     * 缓存预热
     */
    void cacheWarmup();

}
